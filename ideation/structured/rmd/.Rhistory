gam
w <- function(p, gam) {
numerator <- p^gam
denominator <- (p^gam + (1 - p)^gam)^(1/gam)
return(numerator / denominator)
}
d <- expand.grid(p = seq(0, 1, by = .001), gam = seq(.4, .7, by = .1))
d$sp <- w(d$p, d$gam)
d %>%
ggplot(aes(x = p, y = sp)) +
geom_line(aes(linetype = gam)) +
labs(
x = 'Objective Probability',
y = 'Subjective Probability'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
library(tidyverse)
w <- function(p, gam) {
numerator <- p^gam
denominator <- (p^gam + (1 - p)^gam)^(1/gam)
return(numerator / denominator)
}
d <- expand.grid(p = seq(0, 1, by = .001), gam = seq(.4, .7, by = .1))
d$sp <- w(d$p, d$gam)
d %>%
ggplot(aes(x = p, y = sp)) +
geom_line(aes(linetype = gam)) +
labs(
x = 'Objective Probability',
y = 'Subjective Probability'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
library(latex2exp)
w <- function(p, gam) {
numerator <- p^gam
denominator <- (p^gam + (1 - p)^gam)^(1/gam)
return(numerator / denominator)
}
d <- expand.grid(p = seq(0, 1, by = .001), gam = seq(.4, .7, by = .1))
d$sp <- w(d$p, d$gam)
d %>%
ggplot(aes(x = p, y = sp)) +
geom_line(aes(linetype = factor(gam))) +
labs(
x = 'Objective Probability',
y = 'Subjective Probability',
linetype = TeX(r"($\gamma$)")
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
d %>%
ggplot(aes(x = p, y = sp)) +
geom_abline(intercept = 0, slope = 1, linetype = 'dotted') +
geom_line(aes(linetype = factor(gam))) +
labs(
x = 'Objective Probability',
y = 'Subjective Probability',
linetype = TeX(r"($\gamma$)")
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
?rmarkdown::render
?knitr::knit
paste0(getwd(), '../md')
paste0(getwd(), '/../md')
setwd(paste0(getwd(), '/../md/'))
setwd('../rmd')
q()
library(tidyverse)
library(tidyverse)
library(latex2exp)
library(rstan)
12/18
q()
q()
q()
install.packages('rstan')
## super useful docs on knitr
## https://yihui.org/knitr/options/#chunk_options
knitr::opts_knit$set(base.dir = '/home/dave/Dropbox (Lehigh University)/post_doc/professional/projects/gaita/ideation/structured/md/')
#knitr::opts_knit(base.dir = paste0(getwd(), '/../md/'))
knitr::opts_chunk$set(fig.path = 'figures/',
fig.align = 'center',
message = FALSE,
warning = FALSE)
library(tidyverse)
library(latex2exp)
install.packages('BH')
library(BH)
install.packages('BH')
install.packages("BH")
library(BH)
library(BH)
1+1
exponential
library(rstan)
lambda <- 1
d <- rexp(500, lambda)
len <- length(d)
fit <- stan(file = 'stan-file.stan',
data = list(Y=d, LENGTH = len),
warmup = 750,
iter = 1500,
chains = 3)
print(fit)
mcmc_chain <- as.data.frame(fit)
mcmc_chain %>%
ggplot(aes(x = iteration, y = lambda)) +
geom_line() +
ylim(0,1.5)
library(tidyverse)
library(latex2exp)
library(BH)
library(rstan)
mcmc_chain %>%
ggplot(aes(x = iteration, y = lambda)) +
geom_line() +
ylim(0,1.5)
mcmc_chain$iteration <- 1:(nrow(mcmc_chain))
mcmc_chain %>%
ggplot(aes(x = iteration, y = lambda)) +
geom_line() +
ylim(0,1.5)
mcmc_chain %>%
ggplot(aes(x = iteration, y = lambda)) +
geom_line() +
ylim(0,1.5) +
labs(
x = 'Iteration',
y = TeX('($\lambda$)')
mcmc_chain %>%
ggplot(aes(x = iteration, y = lambda)) +
geom_line() +
ylim(0,1.5) +
labs(
x = 'Iteration',
y = TeX(r'($\lambda$)')
) +
theme_bw()
p1 <- mcmc_chain %>%
ggplot(aes(x = iteration, y = lambda)) +
geom_line() +
ylim(0,1.5) +
labs(
x = 'Iteration',
y = TeX(r'($\lambda$)')
) +
theme_bw()
head(mcmc_chain)
hist(mcmc_chain$lambda)
hist(mcmc_chain$lambda)
plot(density(mcmc_chain$lambda))
p2 <- mcmc_chain %>%
ggplot(aes(x = lambda)) +
geom_density(fill = 'steelblue') +
labs(
x = TeX(r'($\lambda)')
) +
theme_bw()
p2 <- mcmc_chain %>%
ggplot(aes(x = lambda)) +
geom_density(fill = 'steelblue') +
labs(
x = TeX(r'($\lambda$)')
) +
theme_bw()
p2
p2 <- mcmc_chain %>%
ggplot(aes(x = lambda)) +
geom_density(fill = 'steelblue', alpha = .6) +
labs(
x = TeX(r'($\lambda$)')
) +
theme_bw()
p2
library(gridExtra)
grid.arrange(p1, p2, nrow = 1)
p1 <- mcmc_chain %>%
ggplot(aes(x = iteration, y = lambda)) +
geom_line(color = 'steelblue') +
ylim(0,1.5) +
labs(
x = 'Iteration',
y = TeX(r'($\lambda$)')
) +
theme_bw()
grid.arrange(p1, p2, nrow = 1)
q(0)
q()
q()
q()
## super useful docs on knitr
## https://yihui.org/knitr/options/#chunk_options
library(tidyverse)
library(latex2exp)
knitr::opts_knit$set(base.dir = '/home/dave/Dropbox (Lehigh University)/post_doc/professional/projects/gaita/ideation/structured/md/')
knitr::opts_chunk$set(fig.path = 'figures/', fig.align = 'center',
fig.width = 7, fig.height = 5)
w <- function(p, gam) {
numerator <- p^gam
denominator <- (p^gam + (1 - p)^gam)^(1/gam)
return(numerator / denominator)
}
d <- expand.grid(p = seq(0, 1, by = .001), gam = seq(.4, .7, by = .1))
d$sp <- w(d$p, d$gam)
d %>%
ggplot(aes(x = p, y = sp)) +
geom_abline(intercept = 0, slope = 1, linetype = 'dotted') +
geom_line(aes(linetype = factor(gam))) +
labs(
x = 'Objective Probability',
y = 'Subjective Probability',
linetype = TeX(r"($\gamma$)")
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
d <- data.frame(x = seq(-1, 1, by = .001))
v <- function(x, alpha = .65, lambda = 2) {
if (x >= 0) {
return(x^alpha)
}
return(-lambda * (-x)^alpha)
}
d$sv <- v(d$x)
d %>%
ggplot(aes(x = x, y = sv)) +
geom_hilne(yintercept = 0) +
geom_vline(xintercept = 0) +
annotate('text', label = 'Losses', x = -.8, y = .5) +
annotate('text', label = 'Gains', x = .8, y = .5) +
geom_line(size = 2) +
labs(
x = 'Outcome',
y = TeX(r'($v(x)$)')
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text = element_blank())
d <- data.frame(x = seq(-1, 1, by = .001))
v <- function(x, alpha = .65, lambda = 2) {
if (x >= 0) {
return(x^alpha)
}
return(-lambda * (-x)^alpha)
}
d$sv <- v(d$x)
d %>%
ggplot(aes(x = x, y = sv)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
annotate('text', label = 'Losses', x = -.8, y = .5) +
annotate('text', label = 'Gains', x = .8, y = .5) +
geom_line(size = 2) +
labs(
x = 'Outcome',
y = TeX(r'($v(x)$)')
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text = element_blank())
head(d)
head(d[d$x>0,])
d <- data.frame(x = seq(-1, 1, by = .001))
v <- function(x, alpha = .75, lambda = 2) {
if (x >= 0) {
return(x^alpha)
}
return(-lambda * (-x)^alpha)
}
d$sv <- v(d$x)
d %>%
ggplot(aes(x = x, y = sv)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
annotate('text', label = 'Losses', x = -.8, y = .5) +
annotate('text', label = 'Gains', x = .8, y = .5) +
geom_line(size = 2) +
labs(
x = 'Outcome',
y = TeX(r'($v(x)$)')
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text = element_blank())
.001^.75
head(d[d$x>0,])
head(v(d$x[d$x>0]))
head(sapply(d$x[d$x>0], v))
d$sv <- sapply(d$x, v)
d %>%
ggplot(aes(x = x, y = sv)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
annotate('text', label = 'Losses', x = -.8, y = .5) +
annotate('text', label = 'Gains', x = .8, y = .5) +
geom_line(size = 2) +
labs(
x = 'Outcome',
y = TeX(r'($v(x)$)')
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text = element_blank())
c(max(d$sv), min(d$sv))
d %>%
ggplot(aes(x = x, y = sv)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
annotate('text', label = 'Losses', x = -.8, y = .5) +
annotate('text', label = 'Gains', x = .8, y = .5) +
ylim(-2,2) +
geom_line(size = 2) +
labs(
x = 'Outcome',
y = TeX(r'($v(x)$)')
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text = element_blank())
d %>%
ggplot(aes(x = x, y = sv)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
annotate('text', label = 'Losses', x = -.8, y = .2) +
annotate('text', label = 'Gains', x = .8, y = .2) +
ylim(-2,2) +
geom_line(size = 2) +
labs(
x = 'Outcome',
y = TeX(r'($v(x)$)')
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text = element_blank())
d <- data.frame(x = seq(-1, 1, by = .001))
v <- function(x, alpha = .65, lambda = 2) {
if (x >= 0) {
return(x^alpha)
}
return(-lambda * (-x)^alpha)
}
d$sv <- sapply(d$x, v)
d %>%
ggplot(aes(x = x, y = sv)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
annotate('text', label = 'Losses', x = -.8, y = .2) +
annotate('text', label = 'Gains', x = .8, y = .2) +
ylim(-2,2) +
geom_line(size = 2) +
labs(
x = 'Outcome',
y = TeX(r'($v(x)$)')
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text = element_blank())
q()
q()
q()
## super useful docs on knitr
## https://yihui.org/knitr/options/#chunk_options
library(tidyverse)
library(latex2exp)
knitr::opts_knit$set(base.dir = '/home/dave/Dropbox (Lehigh University)/post_doc/professional/projects/gaita/ideation/structured/md/')
knitr::opts_chunk$set(fig.path = 'figures/', fig.align = 'center',
fig.width = 12, fig.height = 10,
out.width = '50%', out.height = '30%',
echo = FALSE)
w <- function(p, gam) {
numerator <- p^gam
denominator <- (p^gam + (1 - p)^gam)^(1/gam)
return(numerator / denominator)
}
d <- expand.grid(p = seq(0, 1, by = .001), gam = seq(.4, .7, by = .1))
d$sp <- w(d$p, d$gam)
d %>%
ggplot(aes(x = p, y = sp)) +
geom_abline(intercept = 0, slope = 1, linetype = 'dotted') +
geom_line(aes(linetype = factor(gam))) +
labs(
x = 'Objective Probability',
y = 'Subjective Probability',
linetype = TeX(r"($\gamma$)")
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
d <- data.frame(x = seq(-1, 1, by = .001))
v <- function(x, alpha = .65, lambda = 2) {
if (x >= 0) {
return(x^alpha)
}
return(-lambda * (-x)^alpha)
}
d$sv <- sapply(d$x, v)
d %>%
ggplot(aes(x = x, y = sv)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
annotate('text', label = 'Losses', x = -.8, y = .2) +
annotate('text', label = 'Gains', x = .8, y = .2) +
ylim(-2,2) +
geom_line(size = 2) +
labs(
x = 'Outcome',
y = TeX(r'($v(x)$)')
) +
theme_bw() +
theme(axis.ticks = element_blank(),
axis.text = element_blank())
q()
## super useful docs on knitr
## https://yihui.org/knitr/options/#chunk_options
knitr::opts_knit$set(base.dir = '/home/dave/Dropbox (Lehigh University)/post_doc/professional/projects/gaita/ideation/structured/md/')
#knitr::opts_knit(base.dir = paste0(getwd(), '/../md/'))
knitr::opts_chunk$set(fig.path = 'figures/',
fig.align = 'center',
message = FALSE,
warning = FALSE)
library(tidyverse)
library(latex2exp)
library(BH)
library(rstan)
library(gridExtra)
lambda <- 1
d <- rexp(500, lambda)
len <- length(d)
fit <- stan(file = 'stan-file.stan',
data = list(Y=d, LENGTH = len),
warmup = 750,
iter = 1500,
chains = 3)
print(fit)
mcmc_chain <- as.data.frame(fit)
mcmc_chain$iteration <- 1:(nrow(mcmc_chain))
p1 <- mcmc_chain %>%
ggplot(aes(x = iteration, y = lambda)) +
geom_line(color = 'steelblue') +
ylim(0,1.5) +
labs(
x = 'Iteration',
y = TeX(r'($\lambda$)')
) +
theme_bw()
p2 <- mcmc_chain %>%
ggplot(aes(x = lambda)) +
geom_density(fill = 'steelblue', alpha = .6) +
labs(
x = TeX(r'($\lambda$)')
) +
theme_bw()
grid.arrange(p1, p2, nrow = 1)
q()
