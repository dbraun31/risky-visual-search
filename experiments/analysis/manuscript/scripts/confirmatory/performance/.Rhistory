d <- read.csv('../../../data/main.csv')
N <- length(unique(d$subject))
head(d)
N
d %>%
group_by(subject, n_stimuli, present_or_absent) %>%
summarize(error_ = mean(error), search_rt_ = mean(search_rt)) %>%
group_by(n_stimuli, present_or_absent) %>%
summarize(error_m = mean(error_), error_se = sd(error_) / sqrt(N), rt_m = mean(search_rt_), rt_se = sd(search_rt_) / sqrt(N)) %>%
gather(var, value, error_m:rt_se) %>%
separate(var, into = c('metric', 'summary'), sep = '_') %>%
ungroup() %>%
spread(summary, value) %>%
mutate(metric = recode(metric, 'error' = 'Error', 'rt' = 'Response Time (ms)')) %>%
ggplot(aes(x = n_stimuli, y = m)) +
geom_point(aes(color = present_or_absent)) +
geom_ribbon(aes(ymin = m - se, ymax = m + se, fill = present_or_absent), alpha = .4) +
geom_line(aes(color = present_or_absent)) +
labs(
x = 'Number of Stimuli',
y = '',
fill = 'Target Present or Absent',
color = 'Target Present or Absent'
) +
facet_wrap(~metric, scales = 'free') +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'),
legend.position = c(.15,.8))
library(tidyverse)
d %>%
group_by(subject, n_stimuli, present_or_absent) %>%
summarize(error_ = mean(error), search_rt_ = mean(search_rt)) %>%
group_by(n_stimuli, present_or_absent) %>%
summarize(error_m = mean(error_), error_se = sd(error_) / sqrt(N), rt_m = mean(search_rt_), rt_se = sd(search_rt_) / sqrt(N)) %>%
gather(var, value, error_m:rt_se) %>%
separate(var, into = c('metric', 'summary'), sep = '_') %>%
ungroup() %>%
spread(summary, value) %>%
mutate(metric = recode(metric, 'error' = 'Error', 'rt' = 'Response Time (ms)')) %>%
ggplot(aes(x = n_stimuli, y = m)) +
geom_point(aes(color = present_or_absent)) +
geom_ribbon(aes(ymin = m - se, ymax = m + se, fill = present_or_absent), alpha = .4) +
geom_line(aes(color = present_or_absent)) +
labs(
x = 'Number of Stimuli',
y = '',
fill = 'Target Present or Absent',
color = 'Target Present or Absent'
) +
facet_wrap(~metric, scales = 'free') +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'),
legend.position = c(.15,.8))
d %>%
group_by(subject, n_stimuli, present_or_absent) %>%
summarize(error_ = mean(error), search_rt_ = mean(search_rt)) %>%
group_by(n_stimuli, present_or_absent) %>%
summarize(error_m = mean(error_), error_se = sd(error_) / sqrt(N), rt_m = mean(search_rt_), rt_se = sd(search_rt_) / sqrt(N)) %>%
gather(var, value, error_m:rt_se) %>%
separate(var, into = c('metric', 'summary'), sep = '_') %>%
ungroup() %>%
spread(summary, value) %>%
mutate(metric = recode(metric, 'error' = 'Error', 'rt' = 'Response Time (ms)'),
present_or_absent = recode(present_or_absent,
`absent` = 'Absent',
`present` = 'Present')) %>%
ggplot(aes(x = n_stimuli, y = m)) +
geom_point(aes(color = present_or_absent)) +
geom_ribbon(aes(ymin = m - se, ymax = m + se, fill = present_or_absent), alpha = .4) +
geom_line(aes(color = present_or_absent)) +
labs(
x = 'Number of Stimuli',
y = '',
fill = 'Target Present or Absent',
color = 'Target Present or Absent'
) +
facet_wrap(~metric, scales = 'free') +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'),
legend.position = c(.15,.8))
library(ggsci)
d %>%
group_by(subject, n_stimuli, present_or_absent) %>%
summarize(error_ = mean(error), search_rt_ = mean(search_rt)) %>%
group_by(n_stimuli, present_or_absent) %>%
summarize(error_m = mean(error_), error_se = sd(error_) / sqrt(N), rt_m = mean(search_rt_), rt_se = sd(search_rt_) / sqrt(N)) %>%
gather(var, value, error_m:rt_se) %>%
separate(var, into = c('metric', 'summary'), sep = '_') %>%
ungroup() %>%
spread(summary, value) %>%
mutate(metric = recode(metric, 'error' = 'Error', 'rt' = 'Response Time (ms)'),
present_or_absent = recode(present_or_absent,
`absent` = 'Absent',
`present` = 'Present')) %>%
ggplot(aes(x = n_stimuli, y = m)) +
geom_point(aes(color = present_or_absent)) +
geom_ribbon(aes(ymin = m - se, ymax = m + se, fill = present_or_absent), alpha = .4) +
geom_line(aes(color = present_or_absent)) +
labs(
x = 'Number of Stimuli',
y = '',
fill = 'Target Present or Absent',
color = 'Target Present or Absent'
) +
facet_wrap(~metric, scales = 'free') +
scale_fill_npg() +
scale_color_npg() +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'),
legend.position = c(.15,.8),
axis.ticks = element_blank(),
panel.grid = element_blank())
head(d)
q)_
q()
library(tidyverse)
library(ggsci)
d <- read.csv('../../../data/main.csv')
N <- length(unique(d$subject))
head(d)
d %>%
group_by(subject, n_stimuli, present_or_absent) %>%
summarize(error_ = mean(error), search_rt_ = mean(search_rt)) %>%
group_by(n_stimuli, present_or_absent) %>%
summarize(error_m = mean(error_), error_se = sd(error_) / sqrt(N), rt_m = mean(search_rt_), rt_se = sd(search_rt_) / sqrt(N)) %>%
gather(var, value, error_m:rt_se) %>%
separate(var, into = c('metric', 'summary'), sep = '_') %>%
ungroup() %>%
spread(summary, value) %>%
mutate(metric = recode(metric, 'error' = 'Error', 'rt' = 'Response Time (ms)'),
present_or_absent = recode(present_or_absent,
`absent` = 'Absent',
`present` = 'Present')) %>%
ggplot(aes(x = n_stimuli, y = m)) +
geom_point(aes(color = present_or_absent)) +
geom_ribbon(aes(ymin = m - se, ymax = m + se, fill = present_or_absent), alpha = .4) +
geom_line(aes(color = present_or_absent)) +
labs(
x = 'Number of Stimuli',
y = '',
fill = 'Target Present or Absent',
color = 'Target Present or Absent'
) +
facet_wrap(~metric, scales = 'free') +
scale_fill_npg() +
scale_color_npg() +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'),
legend.position = c(.15,.8),
axis.ticks = element_blank(),
panel.grid = element_blank())
head(d)
q()
library(tidyverse)
library(ggsci)
d <- read.csv('../../../data/main.csv')
N <- length(unique(d$subject))
head(d)
d %>%
group_by(subject, n_stimuli, present_or_absent) %>%
summarize(error_ = mean(error), search_rt_ = mean(search_rt)) %>%
group_by(n_stimuli, present_or_absent) %>%
summarize(error_m = mean(error_), error_se = sd(error_) / sqrt(N), rt_m = mean(search_rt_), rt_se = sd(search_rt_) / sqrt(N)) %>%
gather(var, value, error_m:rt_se) %>%
separate(var, into = c('metric', 'summary'), sep = '_') %>%
ungroup() %>%
spread(summary, value) %>%
mutate(metric = recode(metric, 'error' = 'Error', 'rt' = 'Response Time (ms)'),
present_or_absent = recode(present_or_absent,
`absent` = 'Absent',
`present` = 'Present')) %>%
ggplot(aes(x = n_stimuli, y = m)) +
geom_point(aes(color = present_or_absent)) +
geom_ribbon(aes(ymin = m - se, ymax = m + se, fill = present_or_absent), alpha = .4) +
geom_line(aes(color = present_or_absent)) +
labs(
x = 'Number of Stimuli',
y = '',
fill = 'Target Present or Absent',
color = 'Target Present or Absent'
) +
facet_wrap(~metric, scales = 'free') +
scale_fill_npg() +
scale_color_npg() +
theme_bw() +
theme(strip.background = element_rect(fill = 'white', color = 'black'),
legend.position = c(.15,.8),
axis.ticks = element_blank(),
panel.grid = element_blank())
head(d)
m_error <- lm(error ~ present_or_absent * n_stimuli, data = d)
summary(m_error)
summary(factor(d$n_stimuli))
d$n_stimuli_c <- d$n_stimuli - 32
m_error <- lm(error ~ present_or_absent * n_stimuli, data = d)
summary(m_error)
##
d$n_stimuli_c <- d$n_stimuli - 32
m_error <- lm(error ~ present_or_absent * n_stimuli_c, data = d)
summary(m_error)
##
confint(m_error)
summary(factor(d$n_stimuli))
summary(factor(d$n_stimuli_c))
d$n_stimuli_c <- d$n_stimuli - 32
m_error <- lm(error ~ present_or_absent * n_stimuli_c, data = d)
summary(m_error)
confint(m_error)
## high stimuli
d$n_stimuli_h <- d$n_stimuli_c - max(d$n_stimuli_c)
m_error_h <- lm(error ~ present_or_absent * n_stimuli_h, data = d)
summary(m_error_h)
confint(m_error_h)
## low stimuli
d$n_stimuli_l <- d$n_stimuli_c + min(d$n_stimuli_c)
m_error_l <- lm(error ~ present_or_absent * n_stimuli_l data = d)
d$n_stimuli_c <- d$n_stimuli - 32
m_error <- lm(error ~ present_or_absent * n_stimuli_c, data = d)
summary(m_error)
confint(m_error)
## high stimuli
d$n_stimuli_h <- d$n_stimuli_c - max(d$n_stimuli_c)
m_error_h <- lm(error ~ present_or_absent * n_stimuli_h, data = d)
summary(m_error_h)
confint(m_error_h)
## low stimuli
d$n_stimuli_l <- d$n_stimuli_c + min(d$n_stimuli_c)
m_error_l <- lm(error ~ present_or_absent * n_stimuli_l, data = d)
summary(m_error_l)
confint(m_error_l)
min(d$n_stimuli_c)
d$n_stimuli_c <- d$n_stimuli - 32
m_error <- lm(error ~ present_or_absent * n_stimuli_c, data = d)
summary(m_error)
confint(m_error)
## high stimuli
d$n_stimuli_h <- d$n_stimuli_c - max(d$n_stimuli_c)
m_error_h <- lm(error ~ present_or_absent * n_stimuli_h, data = d)
summary(m_error_h)
confint(m_error_h)
## low stimuli
d$n_stimuli_l <- d$n_stimuli_c + abs(min(d$n_stimuli_c))
m_error_l <- lm(error ~ present_or_absent * n_stimuli_l, data = d)
summary(m_error_l)
confint(m_error_l)
d %>%
group_by(subject) %>%
summarize(choice_rt = mean(choice_rt)) %>%
ggplot(aes(x = choice_rt)) +
geom_density(fill = 'steelblue', alpha = .6) +
theme_bw()
d %>%
ggplot(aes(x = choice_rt)) +
geom_histogram() +
theme_bw()
d %>%
ggplot(aes(x = choice_rt)) +
geom_histogram(color = 'black', fill = 'steelblue') +
theme_bw()
d %>%
ggplot(aes(x = choice_rt)) +
geom_histogram(color = 'black', fill = 'steelblue', alpha = .8) +
theme_bw()
q()
