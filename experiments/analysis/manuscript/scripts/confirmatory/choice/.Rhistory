group_by(direction, magnitude, timing) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_bar(stat = 'identity', aes(fill = magnitude), position = position_dodge(width= .9), color = 'black') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se, group = magnitude), width = .5, position = position_dodge(width= .9)) +
ylim(0,1) +
facet_wrap(~timing) +
labs(
x = 'Framing',
y = 'Proportion Selection of Safe Deck',
fill = 'Magnitude',
caption = paste0('N = ', N, '.')
) +
scale_fill_manual(values = c(`Extreme` = 'grey', `Moderate` = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank())
colnames(d)
d %>%
mutate(direction = recode(direction, `Easier than Reference` = 'Easier',
`Harder than Reference` = 'Harder'),
timing = recode(timing, `controlled` = 'Controlled', `uncontrolled` = 'Uncontrolled')) %>%
group_by(subject, direction, magnitude, timing) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction, magnitude, timing) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_bar(stat = 'identity', aes(fill = magnitude), position = position_dodge(width= .9), color = 'black') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se, group = magnitude), width = .5, position = position_dodge(width= .9)) +
ylim(0,1) +
facet_wrap(~timing) +
labs(
x = 'Framing',
y = 'Proportion Selection of Safe Deck',
fill = 'Magnitude',
caption = paste0('N = ', N, '.')
) +
scale_fill_manual(values = c(`Extreme` = 'grey', `Moderate` = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank())
d %>%
mutate(direction = recode(direction, `Easier than Reference` = 'Easier',
`Harder than Reference` = 'Harder'),
timing = recode(timing, `controlled` = 'Controlled', `uncontrolled` = 'Uncontrolled')) %>%
group_by(subject, direction, magnitude, timing) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction, magnitude, timing) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_hline(yintercept = .5, linetype = 'dotted') +
geom_bar(stat = 'identity', aes(fill = magnitude), position = position_dodge(width= .9), color = 'black') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se, group = magnitude), width = .5, position = position_dodge(width= .9)) +
ylim(0,1) +
facet_wrap(~timing) +
labs(
x = 'Framing',
y = 'Proportion Selection of Safe Deck',
fill = 'Magnitude',
caption = paste0('N = ', N, '.')
) +
scale_fill_manual(values = c(`Extreme` = 'grey', `Moderate` = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank())
library(ez)
ad <- d %>%
group_by(subject, direction, magnitude, timing) %>%
summarize(ssd_ = mean(ssd))
m1 <- ezANOVA(wid = subject, within = .(direction, magnitude, timing),
dv = ssd_, detailed = TRUE, data = ad)
library(ez)
ad <- d %>%
group_by(subject, direction, magnitude, timing) %>%
summarize(ssd_ = mean(ssd))
m1 <- ezANOVA(wid = subject, within = .(direction, magnitude),
between = .(timing), dv = ssd_, detailed = TRUE, data = ad)
cbind(m1$ANOVA, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
d %>%
group_by(subject, direction, magnitude, timing) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N))
d %>%
group_by(subject, direction, magnitude, timing) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(magnitude) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N))
d %>%
group_by(subject, direction, magnitude, timing) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(timing) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N))
```{r}
```{r}
library(lme4)
mm1 <- glmer(ssd ~ direction * timing + (1 + direction * timing | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
summary(mm1)
mm2 <- glmer(ssd ~ direction * timing + (1 + direction + timing | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm2 <- glmer(ssd ~ direction * timing + (1 + direction + timing | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1, mm2)
mm3 <- glmer(ssd ~ direction * timing + (1 | subject) + (0 + direction | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm3 <- glmer(ssd ~ direction * timing + (1 | subject) + (0 + direction | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm3, mm2)
mm4 <- glmer(ssd ~ direction * timing + (1 | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm4 <- glmer(ssd ~ direction * timing + (1 | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm4, mm2)
anova(mm4, mm3)
anova(mm3, mm4)
summary(mm4)
summary(mm3)
d$direction_e <- ifelse(d$direction == 'Easier than Reference', -0.5, 0.5)
mm3 <- glmer(ssd ~ direction_e * timing + (1 | subject) + (0 + direction_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm3 <- glmer(ssd ~ direction_e * timing + (1 | subject) + (0 + direction_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm4 <- glmer(ssd ~ direction_e * timing + (1 | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm3, mm4)
summary(mm3)
## hypothesis testing
mm2 <- glmer(ssd ~ 1  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm3, mm4)
mm <- mm3
anova(mm, mm2)
summary(mm2)
summary(mm)
## hypothesis testing
mm2 <- glmer(ssd ~ timing  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
## hypothesis testing
mm2 <- glmer(ssd ~ timing  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm, mm2)
## hypothesis testing
mm2 <- glmer(ssd ~ timing:direction_e  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
## hypothesis testing
mm2 <- glmer(ssd ~ timing:direction_e  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
## hypothesis testing
mm2 <- glmer(ssd ~ timing + timing:direction_e  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
## hypothesis testing
mm2 <- glmer(ssd ~ timing + timing:direction_e  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm, mm2)
summary(mm)
anova(mm, mm2)
exp(confint(mm1, method = 'Wald'))
exp(confint(mm, method = 'Wald'))
summary(mm)
exp(fixef(mm))
exp(confint(mm, method = 'Wald'))
q()
library(tidyverse)
library(ggsci)
d <- read.csv('../../../data/main.csv')
N <- length(unique(d$subject))
head(d)
d %>%
mutate(direction = recode(direction, `Easier than Reference` = 'Easier',
`Harder than Reference` = 'Harder'),
timing = recode(timing, `controlled` = 'Controlled', `uncontrolled` = 'Uncontrolled')) %>%
group_by(subject, direction, magnitude, colors) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction, magnitude, colors) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_hline(yintercept = .5, linetype = 'dotted') +
geom_bar(stat = 'identity', aes(fill = magnitude), position = position_dodge(width= .9), color = 'black') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se, group = magnitude), width = .5, position = position_dodge(width= .9)) +
ylim(0,1) +
facet_wrap(~colors) +
labs(
x = 'Framing',
y = 'Proportion Selection of Safe Deck',
fill = 'Magnitude',
caption = paste0('N = ', N, '.')
) +
scale_fill_manual(values = c(`Extreme` = 'grey', `Moderate` = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank())
d %>%
mutate(direction = recode(direction, `Easier than Reference` = 'Easier',
`Harder than Reference` = 'Harder')) %>%
group_by(subject, direction, magnitude, colors) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction, magnitude, colors) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_hline(yintercept = .5, linetype = 'dotted') +
geom_bar(stat = 'identity', aes(fill = magnitude), position = position_dodge(width= .9), color = 'black') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se, group = magnitude), width = .5, position = position_dodge(width= .9)) +
ylim(0,1) +
facet_wrap(~colors) +
labs(
x = 'Framing',
y = 'Proportion Selection of Safe Deck',
fill = 'Magnitude',
caption = paste0('N = ', N, '.')
) +
scale_fill_manual(values = c(`Extreme` = 'grey', `Moderate` = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank())
m <- d %>%
group_by(subject, direction) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction) %>%
summarize(ssd = mean(ssd_))
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_violin(fill = 'steelblue', alpha = .2) +
geom_boxplot(fill = NA) +
geom_jitter(width = .05, alpha = .7) +
geom_line(aes(group = subject), linetype = 'dashed', alpha = .7) +
ylim(0,1) +
labs(
x = 'Direction',
y = 'Proportion Selection of Safe Option'
) +
theme_bw()
library(ez)
ad <- d %>%
group_by(subject, direction, magnitude, colors) %>%
summarize(ssd_ = mean(ssd))
m1 <- ezANOVA(wid = subject, within = .(direction, magnitude),
between = .(colors), dv = ssd_, detailed = TRUE, data = ad)
cbind(m1$ANOVA, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
d$direction_e <- ifelse(d$direction == 'Easier than Reference', -0.5, 0.5)
mm1 <- glmer(ssd ~ direction_e * colors + (1 + direction_e * colors | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm2 <- glmer(ssd ~ direction_e * colors + (1 + direction_e + colors | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
library(lme4)
mm1 <- glmer(ssd ~ direction_e * colors + (1 + direction_e * colors | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm1 <- glmer(ssd ~ direction_e * colors + (1 + direction_e * colors | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm2 <- glmer(ssd ~ direction_e * colors + (1 + direction_e + colors | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm3, mm4)
summary(mm2)
summary(mm1)
mm3 <- glmer(ssd ~ direction_e * colors + (1 | subject) + (0 + direction_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1, mm3)
summary(mm3)
mm4 <- glmer(ssd ~ direction_e * colors + (1 | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm4 <- glmer(ssd ~ direction_e * colors + (1 | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1, mm3)
anova(mm4, mm3)
mm <- mm3
## hypothesis testing
mm2 <- glmer(ssd ~ timing + timing:direction_e  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
## hypothesis testing
mm2 <- glmer(ssd ~ colors + colors:direction_e  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
## hypothesis testing
mm2 <- glmer(ssd ~ colors + colors:direction_e  + (1 + direction_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm, mm2)
q()
library(tidyverse)
library(ggsci)
d <- read.csv('../../../data/main.csv')
N <- length(unique(d$subject))
head(d)
d %>%
mutate(direction = recode(direction, `Easier than Reference` = 'Easier',
`Harder than Reference` = 'Harder')) %>%
group_by(subject, direction, magnitude, colors) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction, magnitude, colors) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_hline(yintercept = .5, linetype = 'dotted') +
geom_bar(stat = 'identity', aes(fill = magnitude), position = position_dodge(width= .9), color = 'black') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se, group = magnitude), width = .5, position = position_dodge(width= .9)) +
ylim(0,1) +
facet_wrap(~colors) +
labs(
x = 'Framing',
y = 'Proportion Selection of Safe Deck',
fill = 'Magnitude',
caption = paste0('N = ', N, '.')
) +
scale_fill_manual(values = c(`Extreme` = 'grey', `Moderate` = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank())
m <- d %>%
group_by(subject, direction) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction) %>%
summarize(ssd = mean(ssd_))
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_violin(fill = 'steelblue', alpha = .2) +
geom_boxplot(fill = NA) +
geom_jitter(width = .05, alpha = .7) +
geom_line(aes(group = subject), linetype = 'dashed', alpha = .7) +
ylim(0,1) +
labs(
x = 'Direction',
y = 'Proportion Selection of Safe Option'
) +
theme_bw()
library(ez)
ad <- d %>%
group_by(subject, direction, magnitude, colors) %>%
summarize(ssd_ = mean(ssd))
m1 <- ezANOVA(wid = subject, within = .(direction, magnitude),
between = .(colors), dv = ssd_, detailed = TRUE, data = ad)
cbind(m1$ANOVA, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
summary(factor(d$colors))
library(lme4)
d$direction_e <- ifelse(d$direction == 'Easier than Reference', -0.5, 0.5)
d$colors_c <- ifelse(d$colors == 'With Colors', 0.5, -0.5)
mm1 <- glmer(ssd ~ direction_e * colors + (1 + direction_e * colors | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
d$colors_e <- ifelse(d$colors == 'With Colors', 0.5, -0.5)
mm1 <- glmer(ssd ~ direction_e * colors_e + (1 + direction_e * colors | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm1 <- glmer(ssd ~ direction_e * colors_e + (1 + direction_e * colors | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm2 <- glmer(ssd ~ direction_e * colors_e + (1 + direction_e + colors | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1, mm2)
mm1 <- glmer(ssd ~ direction_e * colors_e + (1 + direction_e * colors_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm1 <- glmer(ssd ~ direction_e * colors_e + (1 + direction_e * colors_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm2 <- glmer(ssd ~ direction_e * colors_e + (1 + direction_e + colors_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1, mm2)
mm1a <- glmer(ssd ~ direction_e * colors_e +
(1 + direction_e + colors_e | subject) +
(1 + direction:colors_e | subject),
, data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm1a <- glmer(ssd ~ direction_e * colors_e +
(1 + direction_e + colors_e | subject) +
(1 + direction:colors_e | subject),
, data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm1a <- glmer(ssd ~ direction_e * colors_e +
(1 | subject) +
(0 + direction_e + colors_e + direction_e:colors_e| subject),
, data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1, mm1a)
mm1b <- glmer(ssd ~ direction_e * colors_e +
(1 | subject) +
(0 + direction_e + colors_e | subject),
, data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1a, mm1b)
mm1b <- glmer(ssd ~ direction_e * colors_e +
(1 | subject) +
(0 + direction_e + colors_e | subject) +
(0 + direction_e:colors_e | subject),
, data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1a, mm1b)
mm <- mm1a
anova(mm1a, mm1)
## hypothesis testing
mm2 <- glmer(ssd ~ colors_e + colors_e:direction_e  +
(1 | subject) +
(0 + direction_e*colors_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm, mm2)
summary(mm)
q()
library(tidyverse)
library(ggsci)
d <- read.csv('../../../data/main_timing.csv')
N <- length(unique(d$subject))
head(d)
library(tidyverse)
library(ggsci)
d <- read.csv('../../../data/main_timing.csv')
N <- length(unique(d$subject))
head(d)
d %>%
mutate(direction = recode(direction, `Easier than Reference` = 'Easier',
`Harder than Reference` = 'Harder')) %>%
group_by(subject, direction, magnitude, timing) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction, magnitude, timing) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_hline(yintercept = .5, linetype = 'dotted') +
geom_bar(stat = 'identity', aes(fill = magnitude), position = position_dodge(width= .9), color = 'black') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se, group = magnitude), width = .5, position = position_dodge(width= .9)) +
ylim(0,1) +
facet_wrap(~timing) +
labs(
x = 'Framing',
y = 'Proportion Selection of Safe Deck',
fill = 'Magnitude',
caption = paste0('N = ', N, '.')
) +
scale_fill_manual(values = c(`Extreme` = 'grey', `Moderate` = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank())
m <- d %>%
group_by(subject, direction) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction) %>%
summarize(ssd = mean(ssd_))
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_violin(fill = 'steelblue', alpha = .2) +
geom_boxplot(fill = NA) +
geom_jitter(width = .05, alpha = .7) +
geom_line(aes(group = subject), linetype = 'dashed', alpha = .7) +
ylim(0,1) +
labs(
x = 'Direction',
y = 'Proportion Selection of Safe Option'
) +
theme_bw()
library(ez)
ad <- d %>%
group_by(subject, direction, magnitude, timing) %>%
summarize(ssd_ = mean(ssd))
m1 <- ezANOVA(wid = subject, within = .(direction, magnitude),
between = .(timing), dv = ssd_, detailed = TRUE, data = ad)
cbind(m1$ANOVA, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
library(lme4)
d$direction_e <- ifelse(d$direction == 'Easier than Reference', -0.5, 0.5)
d$timing_e <- ifelse(d$timing == 'Controlled', 0.5, -0.5)
mm1 <- glmer(ssd ~ direction_e * timing_e + (1 + direction_e * timing_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm1 <- glmer(ssd ~ direction_e * timing_e + (1 + direction_e * timing_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
mm1a <- glmer(ssd ~ direction_e * timing_e +
(1 | subject) +
(0 + direction_e + timing_e + direction_e:timing_e| subject),
, data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1a, mm1)
mm2 <- glmer(ssd ~ direction_e * timing_e + (1 + direction_e + timing_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm1a, mm2)
mm3 <- glmer(ssd ~ direction_e * timing_e + (1 | subject) + (0 + direction_e | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm3, mm2)
mm4 <- glmer(ssd ~ direction_e * timing_e + (1 | subject), data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm3, mm4)
mm <- mm3
## hypothesis testing
mm2 <- glmer(ssd ~ timing_e + timing_e:direction_e  +
(1 | subject) +
(0 + direction_e*timing_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
## hypothesis testing
mm2 <- glmer(ssd ~ timing_e + timing_e:direction_e  +
(1 | subject) +
(0 + direction_e*timing_e | subject) , data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm, mm2)
summary(mm)
summary(mm2)
anova(mm, mm2)
## hypothesis testing
mm2 <- glmer(ssd ~ timing_e + timing_e:direction_e  +
(1 | subject) +
(0 + direction_e | subject),
data = d, family = binomial(link = 'logit'), nAGQ = 1)
## hypothesis testing
mm2 <- glmer(ssd ~ timing_e + timing_e:direction_e  +
(1 | subject) +
(0 + direction_e | subject),
data = d, family = binomial(link = 'logit'), nAGQ = 1)
anova(mm, mm2)
summary(mm)
exp(fixef(mm))
exp(confint(mm, method = 'Wald'))
easyPredCI <- function(model,newdata=NULL,alpha=0.05) {
## baseline prediction, on the linear predictor (logit) scale:
pred0 <- predict(model,re.form=NA,newdata=newdata)
## fixed-effects model matrix for new data
X <- model.matrix(formula(model,fixed.only=TRUE)[-2],newdata)
beta <- fixef(model) ## fixed-effects coefficients
V <- vcov(model)     ## variance-covariance matrix of beta
pred.se <- sqrt(diag(X %*% V %*% t(X))) ## std errors of predictions
## inverse-link function
linkinv <- family(model)$linkinv
## construct 95% Normal CIs on the link scale and
##  transform back to the response (probability) scale:
crit <- -qnorm(alpha/2)
linkinv(cbind(conf.low=pred0-crit*pred.se,
conf.high=pred0+crit*pred.se))
}
## prediction
## intervals from: https://stats.stackexchange.com/questions/147836/prediction-interval-for-lmer-mixed-effects-model-in-r
## dunno how to only get population-level prediction intervals from ^
#library(merTools)
test_data <- expand.grid(direction = unique(d$direction))
test_data$proba <- predict(mm1, re.form=NA, newdata = test_data, type='response')
easyPredCI <- function(model,newdata=NULL,alpha=0.05) {
## baseline prediction, on the linear predictor (logit) scale:
pred0 <- predict(model,re.form=NA,newdata=newdata)
## fixed-effects model matrix for new data
X <- model.matrix(formula(model,fixed.only=TRUE)[-2],newdata)
beta <- fixef(model) ## fixed-effects coefficients
V <- vcov(model)     ## variance-covariance matrix of beta
pred.se <- sqrt(diag(X %*% V %*% t(X))) ## std errors of predictions
## inverse-link function
linkinv <- family(model)$linkinv
## construct 95% Normal CIs on the link scale and
##  transform back to the response (probability) scale:
crit <- -qnorm(alpha/2)
linkinv(cbind(conf.low=pred0-crit*pred.se,
conf.high=pred0+crit*pred.se))
}
## prediction
## intervals from: https://stats.stackexchange.com/questions/147836/prediction-interval-for-lmer-mixed-effects-model-in-r
## dunno how to only get population-level prediction intervals from ^
#library(merTools)
test_data <- expand.grid(direction = unique(d$direction_e))
test_data$proba <- predict(mm1, re.form=NA, newdata = test_data, type='response')
## prediction
## intervals from: https://stats.stackexchange.com/questions/147836/prediction-interval-for-lmer-mixed-effects-model-in-r
## dunno how to only get population-level prediction intervals from ^
#library(merTools)
test_data <- expand.grid(direction_e = unique(d$direction_e))
test_data$proba <- predict(mm1, re.form=NA, newdata = test_data, type='response')
q()
q()
