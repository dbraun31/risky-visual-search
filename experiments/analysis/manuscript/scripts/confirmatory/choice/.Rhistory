## delay var
m_delay <- glmer(ssd ~ direction_e +
direction_e:delay_e +
trial_c +
magnitude_e +
n_stimuli_lag_c +
performance_c +
(1 | subject) +
(0 + direction_e | subject) +
(0 + trial_c | subject) +
(0 + magnitude_e | subject),
data = d, family = binomial(link = 'logit'),
control = glmerControl(optimizer = 'bobyqa'),
nAGQ = 1)
anova(mm, m_delay)
print('Interaction')
## interaction
m_interaction <- glmer(ssd ~ direction_e +
delay_e +
trial_c +
magnitude_e +
n_stimuli_lag_c +
performance_c +
(1 | subject) +
(0 + direction_e | subject) +
(0 + trial_c | subject) +
(0 + magnitude_e | subject),
data = d, family = binomial(link = 'logit'),
control = glmerControl(optimizer = 'bobyqa'),
nAGQ = 1)
anova(mm, m_interaction)
## hypothesis testing
summary(mm)
exp(fixef(mm))
exp(confint(mm, method = 'Wald'))
library(ggExtra)
ci <- exp(confint(mm, method = 'Wald'))
ci
levels <- c('Intercept', 'Framing', 'Trial Count', 'Outcome Magnitude',
'Delay', 'Search Stimuli (t-1)', 'Performance', 'Direction X Delay')
parameter <- factor(levels, levels = rev(levels))
pd <- data.frame(parameter = parameter, estimate = exp(fixef(mm)),
lower = ci[5:(nrow(ci)),1], upper = ci[5:(nrow(ci)),2])
pd
pd %>%
ggplot(aes(x = parameter, y = estimate)) +
geom_hline(yintercept = 1, linetype = 'dotted') +
geom_point(size = 2) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .5) +
coord_flip() +
labs(
x = 'Parameter',
y = 'Odds of Selecting Safe Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
library(ggExtra)
ci <- exp(confint(mm, method = 'Wald'))
levels <- c('Intercept', 'Framing', 'Trial Count', 'Outcome Magnitude',
'Delay', 'Search Stimuli (t-1)', 'Performance', 'Direction X Delay')
parameter <- factor(levels, levels = rev(levels))
pd <- data.frame(parameter = parameter, estimate = exp(fixef(mm)),
lower = exp(ci[5:(nrow(ci)),1]), upper = exp(ci[5:(nrow(ci)),2]))
pd %>%
ggplot(aes(x = parameter, y = estimate)) +
geom_hline(yintercept = 1, linetype = 'dotted') +
geom_point(size = 2) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .5) +
coord_flip() +
labs(
x = 'Parameter',
y = 'Odds of Selecting Safe Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
pd <- data.frame(parameter = parameter, estimate = exp(fixef(mm)),
lower = ci[5:(nrow(ci)),1], upper = ci[5:(nrow(ci)),2])
pd %>%
ggplot(aes(x = parameter, y = estimate)) +
geom_hline(yintercept = 1, linetype = 'dotted') +
geom_point(size = 2) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .5) +
coord_flip() +
labs(
x = 'Parameter',
y = 'Odds of Selecting Safe Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
confint(mm, method='Wald', parm='beta_')
confint(mm, method='Wald')
confint(mm, method='Wald', parm='beta_')
ctab <- cbind(fixef(mm), confint(mm, method='Wald', parm='beta_'))
ctab
rtab <- exp(ctab)
rtab
colnames(rtab)
ci <- confint(mm, method = 'Wald', parm = 'beta_')
levels <- c('Intercept', 'Framing', 'Trial Count', 'Outcome Magnitude',
'Delay', 'Search Stimuli (t-1)', 'Performance', 'Direction X Delay')
ctab <- cbind(fixef(mm), ci)
rtab <- exp(ctab)
rtab$parameter <- levels
rtab
rtab <- data.frame(exp(ctab))
rtab
rtab$parameter <- levels
rtab
colnames(rtab) <- c('estimate', 'lower', 'upper', 'parameter')
rtab
levels <- c('Intercept', 'Framing', 'Delay', 'Trial Count', 'Outcome Magnitude',
'Search Stimuli (t-1)', 'Performance', 'Direction X Delay')
ctab <- cbind(fixef(mm), ci)
rtab <- data.frame(exp(ctab))
rtab$parameter <- levels
colnames(rtab) <- c('estimate', 'lower', 'upper', 'parameter')
rtab
parameter <- factor(levels, levels = rev(levels))
ci <- confint(mm, method = 'Wald', parm = 'beta_')
levels <- c('Intercept', 'Framing', 'Delay', 'Trial Count', 'Outcome Magnitude',
'Search Stimuli (t-1)', 'Performance', 'Direction X Delay')
ctab <- cbind(fixef(mm), ci)
rtab <- data.frame(exp(ctab))
parameter <- factor(levels, levels = rev(levels))
rtab$parameter <- levels
colnames(rtab) <- c('estimate', 'lower', 'upper', 'parameter')
rtab
rtab %>%
ggplot(aes(x = parameter, y = estimate)) +
geom_hline(yintercept = 1, linetype = 'dotted') +
geom_point(size = 2) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .5) +
coord_flip() +
labs(
x = 'Parameter',
y = 'Odds of Selecting Safe Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
ci <- confint(mm, method = 'Wald', parm = 'beta_')
ci <- confint(mm, method = 'Wald', parm = 'beta_')
levels <- c('Intercept', 'Framing', 'Delay', 'Trial Count', 'Outcome Magnitude',
'Search Stimuli (t-1)', 'Performance', 'Direction X Delay')
ctab <- cbind(fixef(mm), ci)
rtab <- data.frame(exp(ctab))
parameter <- factor(levels, levels = rev(levels))
rtab$parameter <- parameter
colnames(rtab) <- c('estimate', 'lower', 'upper', 'parameter')
rtab
rtab %>%
ggplot(aes(x = parameter, y = estimate)) +
geom_hline(yintercept = 1, linetype = 'dotted') +
geom_point(size = 2) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .5) +
coord_flip() +
labs(
x = 'Parameter',
y = 'Odds of Selecting Safe Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
rtab %>%
ggplot(aes(x = parameter, y = estimate)) +
geom_hline(yintercept = 1, linetype = 'dotted') +
geom_point(size = 2) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .5) +
ylim(0, 2.5) +
coord_flip() +
labs(
x = 'Parameter',
y = 'Odds of Selecting Safe Deck'
) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank())
head(coef(mm))
head(coef(mm)$subject)
co <- data.frame(id = rownames(coef(mm)$subject), odds_ratio = exp(coef(mm)$subject[,'direction_e']))
head(co)
p1 <- r %>%
mutate(id = 1:(nrow(.))) %>%
ggplot(aes(x = reorder(id, odds_ratio), y = odds_ratio)) +
geom_hline(yintercept = 1, linetype = 'dotted') +
geom_hline(yintercept = unique(r$fixed_odds_ratio), linetype = 'dashed', color = 'blue') +
geom_point() +
ylim(0, 10) +
labs(
x = 'Participant',
y = 'Increase in Odds of Selecting Safe Deck when Outcomes are Harder than Reference'
) +
coord_flip() +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank())
p1 <- co %>%
mutate(id = 1:(nrow(.))) %>%
ggplot(aes(x = reorder(id, odds_ratio), y = odds_ratio)) +
geom_hline(yintercept = 1, linetype = 'dotted') +
geom_hline(yintercept = unique(r$fixed_odds_ratio), linetype = 'dashed', color = 'blue') +
geom_point() +
ylim(0, 10) +
labs(
x = 'Participant',
y = 'Increase in Odds of Selecting Safe Deck when Outcomes are Harder than Reference'
) +
coord_flip() +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank())
r <- data.frame(id = rownames(coef(mm)$subject), odds_ratio = exp(coef(mm)$subject[,'direction_e']))
p1 <- r %>%
mutate(id = 1:(nrow(.))) %>%
ggplot(aes(x = reorder(id, odds_ratio), y = odds_ratio)) +
geom_hline(yintercept = 1, linetype = 'dotted') +
geom_hline(yintercept = unique(r$fixed_odds_ratio), linetype = 'dashed', color = 'blue') +
geom_point() +
ylim(0, 10) +
labs(
x = 'Participant',
y = 'Increase in Odds of Selecting Safe Deck when Outcomes are Harder than Reference'
) +
coord_flip() +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank())
ggMarginal(p1, margins = 'x', fill = 'steelblue', alpha = .7)
print('Main effect of magnitude')
## interaction
m_magnitude <- glmer(ssd ~ direction_e * delay_e +
trial_c +
n_stimuli_lag_c +
performance_c +
(1 | subject) +
(0 + direction_e | subject) +
(0 + trial_c | subject) +
(0 + magnitude_e | subject),
data = d, family = binomial(link = 'logit'),
control = glmerControl(optimizer = 'bobyqa'),
nAGQ = 1)
anova(mm, m_magnitude)
d %>%
group_by(subject, magnitude) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(magnitude) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(100))
print('Main effect of stimuli lag')
print(paste0('One unit on the scaled var in the model is about ', round(sd(d$n_stimuli_lag), 3)))
## stimuli lag
m_stimuli_lag <- glmer(ssd ~ direction_e * delay_e +
magnitude_e +
trial_c +
performance_c +
(1 | subject) +
(0 + direction_e | subject) +
(0 + trial_c | subject) +
(0 + magnitude_e | subject),
data = d, family = binomial(link = 'logit'),
control = glmerControl(optimizer = 'bobyqa'),
nAGQ = 1)
anova(mm, m_stimuli_lag)
head(d[is.na(d$n_stimuli_lag_c),])
## stimuli lag
m_stimuli_lag <- glmer(ssd ~ direction_e * delay_e +
magnitude_e +
trial_c +
performance_c +
(1 | subject) +
(0 + direction_e | subject) +
(0 + trial_c | subject) +
(0 + magnitude_e | subject),
data = d[!(is.na(d$n_stimuli_lag)),], family = binomial(link = 'logit'),
control = glmerControl(optimizer = 'bobyqa'),
nAGQ = 1)
## stimuli lag
m_stimuli_lag <- glmer(ssd ~ direction_e * delay_e +
magnitude_e +
trial_c +
performance_c +
(1 | subject) +
(0 + direction_e | subject) +
(0 + trial_c | subject) +
(0 + magnitude_e | subject),
data = d[!(is.na(d$n_stimuli_lag)),], family = binomial(link = 'logit'),
control = glmerControl(optimizer = 'bobyqa'),
nAGQ = 1)
anova(mm, m_stimuli_lag)
nrow(d)
## drop na lagged trials (ie, first trial for each subject)
d <- d[!is.na(d$n_stimuli_lag),]
## random slope of n_stimuli lag not significant
mm <- glmer(ssd ~ direction_e * delay_e +
trial_c +
magnitude_e +
n_stimuli_lag_c +
performance_c +
(1 | subject) +
(0 + direction_e | subject) +
(0 + trial_c | subject) +
(0 + magnitude_e | subject),
data = d, family = binomial(link = 'logit'),
control = glmerControl(optimizer = 'bobyqa'),
nAGQ = 1)
m_stimuli_lag <- glmer(ssd ~ direction_e * delay_e +
magnitude_e +
trial_c +
performance_c +
(1 | subject) +
(0 + direction_e | subject) +
(0 + trial_c | subject) +
(0 + magnitude_e | subject),
data = d, family = binomial(link = 'logit'),
control = glmerControl(optimizer = 'bobyqa'),
nAGQ = 1)
anova(mm, m_stimuli_lag)
d %>%
group_by(subject, n_stimuli_lag) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(n_stimuli_lag) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(100))
d %>%
group_by(subject, n_stimuli_lag) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(n_stimuli_lag) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(100)) %>%
print() %>%
ggplot(aes(x = n_stimuli_lag, y = ssd)) +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se), width = .5) +
geom_point() +
geom_line()
d %>%
group_by(subject, n_stimuli_lag) %>%
summarize(ssd_ = mean(ssd), count = n()) %>%
group_by(n_stimuli_lag) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(100), count = sum(count)) %>%
gather(metric, outcome, ssd, count) %>%
print() %>%
ggplot(aes(x = n_stimuli_lag, y = outcome)) +
geom_errorbar(aes(ymin = outcome - se, ymax = outcome + se), width = .5) +
geom_point() +
geom_line() +
facet_wrap(~metric)
d %>%
group_by(subject, n_stimuli_lag) %>%
summarize(ssd_ = mean(ssd), count = n()) %>%
group_by(n_stimuli_lag) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(100), count = sum(count)) %>%
gather(metric, outcome, ssd, count) %>%
print() %>%
ggplot(aes(x = n_stimuli_lag, y = outcome)) +
geom_errorbar(aes(ymin = outcome - se, ymax = outcome + se), width = .5) +
geom_point() +
geom_line() +
facet_wrap(~metric, scales = 'free')
d %>%
group_by(subject, n_stimuli_lag) %>%
summarize(ssd_ = mean(ssd), count = n()) %>%
group_by(n_stimuli_lag) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(100), count = sum(count)) %>%
gather(metric, outcome, ssd, count) %>%
mutate(metric = recode(metric, `count` = 'Number of Observations',
`ssd` = 'Proportion Selection of Safe Deck')) %>%
print() %>%
ggplot(aes(x = n_stimuli_lag, y = outcome)) +
geom_errorbar(aes(ymin = outcome - se, ymax = outcome + se), width = .5) +
geom_point() +
geom_line() +
facet_wrap(~metric, scales = 'free')
d %>%
group_by(subject, n_stimuli_lag) %>%
summarize(ssd_ = mean(ssd), count = n()) %>%
group_by(n_stimuli_lag) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(100), count = sum(count)) %>%
gather(metric, outcome, ssd, count) %>%
mutate(metric = recode(metric, `count` = 'Number of Observations',
`ssd` = 'Proportion Selection of Safe Deck')) %>%
print() %>%
ggplot(aes(x = n_stimuli_lag, y = outcome)) +
geom_errorbar(aes(ymin = outcome - se, ymax = outcome + se), width = .5) +
geom_point() +
geom_line() +
labs(
x = 'Number of Search Stimuli on Trial (t-1)',
y = ''
) +
facet_wrap(~metric, scales = 'free') +
theme_bw() +
theme(
axis.ticks = element_blank(),
strip.background = element_rect(color = 'black', fill = 'white'),
panel.grid = element_blank()
)
summary(factor(d$n_stimuli))
q()
library(tidyverse)
library(ggsci)
library(gridExtra)
d <- read.csv('../../../data/main_timing.csv')
N <- length(unique(d$subject))
head(d)
d <- d %>%
mutate(direction = recode(direction, `Easier than Reference` = 'Easier',
`Harder than Reference` = 'Harder'))
p1 <- d %>%
group_by(subject, direction, delay) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction, delay) %>%
summarize(ssd = mean(ssd_), se = sd(ssd_) / sqrt(N)) %>%
print() %>%
ggplot(aes(x = delay, y = ssd)) +
geom_hline(yintercept = .5, linetype = 'dotted') +
geom_bar(stat = 'identity', aes(fill = direction), position = position_dodge(width= .9), color = 'black') +
geom_errorbar(aes(ymin = ssd - se, ymax = ssd + se, group = direction), width = .5, position = position_dodge(width= .9)) +
ylim(0,1) +
labs(
x = 'Delay',
y = 'Proportion Selection of Safe Deck',
fill = 'Framing',
caption = paste0('N = ', N, '.')
) +
scale_fill_manual(values = c(`Easier` = 'grey', `Harder` = 'white')) +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
legend.position = c(.2, .85))
p1
m <- d %>%
group_by(subject, direction, delay) %>%
summarize(ssd_ = mean(ssd)) %>%
group_by(direction, delay) %>%
summarize(ssd = mean(ssd_))
p2 <- d %>%
group_by(subject, direction, delay) %>%
summarize(ssd = mean(ssd)) %>%
mutate(delay = recode(delay, `Enforced` = 'Delay Enforced',
`Not Enforced` = 'Delay not Enforced')) %>%
ggplot(aes(x = direction, y = ssd)) +
geom_violin(fill = 'steelblue', alpha = .2) +
geom_boxplot(fill = NA) +
geom_jitter(width = .05, alpha = .7) +
geom_line(aes(group = subject), linetype = 'dashed', alpha = .7) +
facet_wrap(~delay) +
ylim(0,1) +
labs(
x = 'Framing',
y = 'Proportion Selection of Safe Option'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
axis.ticks = element_blank(),
panel.grid = element_blank())
p2
grid.arrange(p1, p2, nrow = 1)
library(ez)
ad <- d %>%
group_by(subject, direction, magnitude, delay) %>%
summarize(ssd_ = mean(ssd))
m1 <- ezANOVA(wid = subject, within = .(direction, magnitude),
between = .(delay), dv = ssd_, detailed = TRUE, data = ad)
cbind(m1$ANOVA, data.frame(n2p = m1$ANOVA$SSn / (m1$ANOVA$SSn + m1$ANOVA$SSd)))
library(lme4)
d$direction_e <- ifelse(d$direction == 'Easier', -0.5, 0.5)
d$delay_e <- ifelse(d$delay == 'Enforced', 0.5, -0.5)
d$n_stimuli_lag_c <- scale(d$n_stimuli_lag)[,1]
d$magnitude_e <- ifelse(d$magnitude == 'Moderate', -0.5, 0.5)
d$trial_c <- ifelse(d$delay == 'Enforced',
scale(d[d$delay=='Enforced',]$trial)[,1],
scale(d[d$delay == 'Not Enforced',]$trial)[,1])
## compute performance
sp <- d %>%
group_by(subject) %>%
summarize(ssd = mean(ssd), search_rt = mean(search_rt), error = mean(error))
sp$search_rt_c <- scale(sp$search_rt)[,1]
sp$error_c <- scale(sp$error)[,1]
sp <- sp %>%
mutate(performance = sqrt((-2 - error_c)^2 + (-2 - search_rt_c)^2))
sp$performance_c <- -scale(sp$performance)[,1]
d <- sp %>%
select(subject, performance_c) %>%
inner_join(d)
## drop na lagged trials (ie, first trial for each subject)
d <- d[!is.na(d$n_stimuli_lag),]
## random slope of n_stimuli lag not significant
mm <- glmer(ssd ~ direction_e * delay_e +
trial_c +
magnitude_e +
n_stimuli_lag_c +
performance_c +
(1 | subject) +
(0 + direction_e | subject) +
(0 + trial_c | subject) +
(0 + magnitude_e | subject),
data = d, family = binomial(link = 'logit'),
control = glmerControl(optimizer = 'bobyqa'),
nAGQ = 1)
## hypothesis testing
summary(mm)
levels <- c('Intercept', 'Framing', 'Delay', 'Trial Count', 'Outcome Magnitude',
'Search Stimuli (t-1)', 'Performance', 'Direction X Delay')
data.frame(parameter = levels, estimate = exp(fixef(mm)), exp(confint(mm, method = 'Wald', parm = 'beta_')))
q()
