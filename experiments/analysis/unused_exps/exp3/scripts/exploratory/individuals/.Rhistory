d <- d %>%
inner_join(cog_need)
## look at it
p <- d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
inner_join(d) %>%
group_by(subject) %>%
summarize(effect = unique(effect), cog_need_score = unique(cog_need_score)) %>%
ggplot(aes(x = cog_need_score, y = effect)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
x = 'Need for Cognition',
y = 'Extent Aligned with Prediction'
) +
theme_bw()
ggMarginal(p, type = 'histogram')
## gotta figure out how to bin choice rt
p <- d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, effect) %>%
inner_join(d) %>%
group_by(subject) %>%
summarize(effect = unique(effect), cog_need_score = unique(cog_need_score), choice_rt = mean(choice_rt)) %>%
ggplot(aes(x = cog_need_score, y = effect)) +
geom_point(faes(rame = choice_rt) )+
geom_smooth(method = 'lm') +
labs(
x = 'Need for Cognition',
y = 'Extent Aligned with Prediction'
) +
theme_bw()
library(tidyverse)
library(ggExtra)
library(plotly)
exp <- str_extract(getwd(), 'exp\\d[a-z]?')
d <- read.csv(paste0(here::here(), '/experiments/analysis/', exp, '/data/', exp, '_main_full.csv'))
demo <- read.csv(paste0(here::here(), '/experiments/analysis/', exp, '/data/', exp, '_demo.csv'))
N <- length(unique(d$subject))
head(d)
reverse_items <- c(3,4,5,7,8,9,12,16,17)
response_code <- data.frame(response = c('neutral', 'somewhat_agree', 'somewhat_disagree', 'strongly_agree', 'strongly_disagree', ''), numeric = c(3, 4, 2, 5, 1, NA))
survey <- demo %>%
gather(question, response, cog_effort_q1:cog_effort_q18) %>%
select(subject, question, response) %>%
inner_join(response_code)
parse_question <- function(q) {
return(as.numeric(sub('.', '', unlist(strsplit(q, split='_'))[3])))
}
survey <- survey %>%
mutate(question = Vectorize(parse_question)(question)) %>%
mutate(numeric_final = ifelse(question %in% reverse_items, 6-numeric, numeric)) %>%
arrange(subject) %>%
select(-response, -numeric) %>%
rename(response = numeric_final)
survey %>%
filter(!is.na(response)) %>%
group_by(subject) %>%
summarize(cog_need = mean(response)) %>%
ggplot(aes(x = cog_need)) +
geom_histogram(color = 'black')
survey %>%
group_by(subject) %>%
summarize(missing = sum(is.na(response)) / nrow(.)) %>%
ggplot(aes(x = missing)) +
geom_histogram(color = 'black') +
labs(
x = 'Proportion Survey Unanswered',
y = 'Frequency'
)
cog_need <- survey %>%
filter(!is.na(response)) %>%
group_by(subject) %>%
summarize(cog_need_score = mean(response))
## merge cog need with overall data
d <- d %>%
inner_join(cog_need)
## look at it
p <- d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
inner_join(d) %>%
group_by(subject) %>%
summarize(effect = unique(effect), cog_need_score = unique(cog_need_score)) %>%
ggplot(aes(x = cog_need_score, y = effect)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
x = 'Need for Cognition',
y = 'Extent Aligned with Prediction'
) +
theme_bw()
ggMarginal(p, type = 'histogram')
## gotta figure out how to bin choice rt
p <- d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, effect) %>%
inner_join(d) %>%
group_by(subject) %>%
summarize(effect = unique(effect), cog_need_score = unique(cog_need_score), choice_rt = mean(choice_rt)) %>%
ggplot(aes(x = cog_need_score, y = effect)) +
geom_point(aes(rame = choice_rt) )+
geom_smooth(method = 'lm') +
labs(
x = 'Need for Cognition',
y = 'Extent Aligned with Prediction'
) +
theme_bw()
fig <- ggplotly(p)
fig <- fig %>%
animation_opts(
1000, easing = 'elastic', redraw = FALSE
)
fig <- fig %>%
animation_button(
x = 1, xanchor = 'right', y = 0, yanchor = 'bottom'
)
q()
hist(lag$lag_days)
lag <- read.csv('../../../../participation_lag.csv')
hist(lag$lag_days)
lag %>%
ggplot(aes(x = lag_days)) +
geom_histogram(color = 'black')
library(tidyverse)
library(ggExtra)
library(plotly)
exp <- str_extract(getwd(), 'exp\\d[a-z]?')
d <- read.csv(paste0(here::here(), '/experiments/analysis/', exp, '/data/', exp, '_main_full.csv'))
demo <- read.csv(paste0(here::here(), '/experiments/analysis/', exp, '/data/', exp, '_demo.csv'))
N <- length(unique(d$subject))
head(d)
reverse_items <- c(3,4,5,7,8,9,12,16,17)
response_code <- data.frame(response = c('neutral', 'somewhat_agree', 'somewhat_disagree', 'strongly_agree', 'strongly_disagree', ''), numeric = c(3, 4, 2, 5, 1, NA))
survey <- demo %>%
gather(question, response, cog_effort_q1:cog_effort_q18) %>%
select(subject, question, response) %>%
inner_join(response_code)
parse_question <- function(q) {
return(as.numeric(sub('.', '', unlist(strsplit(q, split='_'))[3])))
}
survey <- survey %>%
mutate(question = Vectorize(parse_question)(question)) %>%
mutate(numeric_final = ifelse(question %in% reverse_items, 6-numeric, numeric)) %>%
arrange(subject) %>%
select(-response, -numeric) %>%
rename(response = numeric_final)
survey %>%
filter(!is.na(response)) %>%
group_by(subject) %>%
summarize(cog_need = mean(response)) %>%
ggplot(aes(x = cog_need)) +
geom_histogram(color = 'black')
survey %>%
group_by(subject) %>%
summarize(missing = sum(is.na(response)) / nrow(.)) %>%
ggplot(aes(x = missing)) +
geom_histogram(color = 'black') +
labs(
x = 'Proportion Survey Unanswered',
y = 'Frequency'
)
cog_need <- survey %>%
filter(!is.na(response)) %>%
group_by(subject) %>%
summarize(cog_need_score = mean(response))
## merge cog need with overall data
d <- d %>%
inner_join(cog_need)
## look at it
p <- d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
inner_join(d) %>%
group_by(subject) %>%
summarize(effect = unique(effect), cog_need_score = unique(cog_need_score)) %>%
ggplot(aes(x = cog_need_score, y = effect)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
x = 'Need for Cognition',
y = 'Extent Aligned with Prediction'
) +
theme_bw()
ggMarginal(p, type = 'histogram')
lag <- read.csv('../../../../participation_lag.csv')
lag %>%
ggplot(aes(x = lag_days)) +
geom_histogram(color = 'black')
lag %>%
ggplot(aes(x = lag_days)) +
geom_histogram(color = 'black', bins = 20)
avg_lag <- mean(lag$lag_days)
lag %>%
ggplot(aes(x = lag_days)) +
geom_histogram(color = 'black', bins = 20) +
geom_vline(xintercept = avg_lag, linetype = 'dashed')
head(d)
head(lag)
## join
d %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
head()
nrow(d)
## join
d %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
nrow()
N
length(unique(d$sona_id)[!d$sona_id %in% lag$survey_id])
length(unique(d$sona_id)[!unique(d$sona_id) %in% lag$survey_id])
## join
## losing three Ps from my og data for some reason
d <- d %>%
inner_join(lag, by = c('sona_id' = 'survey_id'))
head(d)
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
head()
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, effect) %>%
inner_join(d) %>%
head()
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
head()
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
ggplot(aes(x = lag_days, y = effect)) +
geom_point() +
geom_smooth(method = 'lm')
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
min(lag_days)
head(lag)
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
min(.$lag_days)
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
summarize(min(lag_days))
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
ungroup() %>%
summarize(min(lag_days))
head(lag)
q()
library(tidyverse)
library(ggExtra)
library(plotly)
exp <- str_extract(getwd(), 'exp\\d[a-z]?')
d <- read.csv(paste0(here::here(), '/experiments/analysis/', exp, '/data/', exp, '_main_full.csv'))
demo <- read.csv(paste0(here::here(), '/experiments/analysis/', exp, '/data/', exp, '_demo.csv'))
N <- length(unique(d$subject))
head(d)
reverse_items <- c(3,4,5,7,8,9,12,16,17)
response_code <- data.frame(response = c('neutral', 'somewhat_agree', 'somewhat_disagree', 'strongly_agree', 'strongly_disagree', ''), numeric = c(3, 4, 2, 5, 1, NA))
survey <- demo %>%
gather(question, response, cog_effort_q1:cog_effort_q18) %>%
select(subject, question, response) %>%
inner_join(response_code)
parse_question <- function(q) {
return(as.numeric(sub('.', '', unlist(strsplit(q, split='_'))[3])))
}
survey <- survey %>%
mutate(question = Vectorize(parse_question)(question)) %>%
mutate(numeric_final = ifelse(question %in% reverse_items, 6-numeric, numeric)) %>%
arrange(subject) %>%
select(-response, -numeric) %>%
rename(response = numeric_final)
survey %>%
filter(!is.na(response)) %>%
group_by(subject) %>%
summarize(cog_need = mean(response)) %>%
ggplot(aes(x = cog_need)) +
geom_histogram(color = 'black')
survey %>%
group_by(subject) %>%
summarize(missing = sum(is.na(response)) / nrow(.)) %>%
ggplot(aes(x = missing)) +
geom_histogram(color = 'black') +
labs(
x = 'Proportion Survey Unanswered',
y = 'Frequency'
)
cog_need <- survey %>%
filter(!is.na(response)) %>%
group_by(subject) %>%
summarize(cog_need_score = mean(response))
## merge cog need with overall data
d <- d %>%
inner_join(cog_need)
## look at it
p <- d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
inner_join(d) %>%
group_by(subject) %>%
summarize(effect = unique(effect), cog_need_score = unique(cog_need_score)) %>%
ggplot(aes(x = cog_need_score, y = effect)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
x = 'Need for Cognition',
y = 'Extent Aligned with Prediction'
) +
theme_bw()
ggMarginal(p, type = 'histogram')
lag <- read.csv('../../../../participation_lag.csv')
avg_lag <- mean(lag$lag_days)
lag %>%
ggplot(aes(x = lag_days)) +
geom_histogram(color = 'black', bins = 20) +
geom_vline(xintercept = avg_lag, linetype = 'dashed')
## join
## losing three Ps from my og data for some reason
d <- d %>%
inner_join(lag, by = c('sona_id' = 'survey_id'))
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
ungroup() %>%
summarize(min(lag_days))
ggplot(aes(x = lag_days, y = effect)) +
geom_point() +
geom_smooth(method = 'lm')
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
ggplot(aes(x = lag_days, y = effect)) +
geom_point() +
geom_smooth(method = 'lm')
q()
library(tidyverse)
library(ggExtra)
library(plotly)
exp <- str_extract(getwd(), 'exp\\d[a-z]?')
d <- read.csv(paste0(here::here(), '/experiments/analysis/', exp, '/data/', exp, '_main_full.csv'))
demo <- read.csv(paste0(here::here(), '/experiments/analysis/', exp, '/data/', exp, '_demo.csv'))
N <- length(unique(d$subject))
head(d)
reverse_items <- c(3,4,5,7,8,9,12,16,17)
response_code <- data.frame(response = c('neutral', 'somewhat_agree', 'somewhat_disagree', 'strongly_agree', 'strongly_disagree', ''), numeric = c(3, 4, 2, 5, 1, NA))
survey <- demo %>%
gather(question, response, cog_effort_q1:cog_effort_q18) %>%
select(subject, question, response) %>%
inner_join(response_code)
parse_question <- function(q) {
return(as.numeric(sub('.', '', unlist(strsplit(q, split='_'))[3])))
}
survey <- survey %>%
mutate(question = Vectorize(parse_question)(question)) %>%
mutate(numeric_final = ifelse(question %in% reverse_items, 6-numeric, numeric)) %>%
arrange(subject) %>%
select(-response, -numeric) %>%
rename(response = numeric_final)
survey %>%
filter(!is.na(response)) %>%
group_by(subject) %>%
summarize(cog_need = mean(response)) %>%
ggplot(aes(x = cog_need)) +
geom_histogram(color = 'black')
survey %>%
group_by(subject) %>%
summarize(missing = sum(is.na(response)) / nrow(.)) %>%
ggplot(aes(x = missing)) +
geom_histogram(color = 'black') +
labs(
x = 'Proportion Survey Unanswered',
y = 'Frequency'
)
cog_need <- survey %>%
filter(!is.na(response)) %>%
group_by(subject) %>%
summarize(cog_need_score = mean(response))
## merge cog need with overall data
d <- d %>%
inner_join(cog_need)
## look at it
p <- d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
inner_join(d) %>%
group_by(subject) %>%
summarize(effect = unique(effect), cog_need_score = unique(cog_need_score)) %>%
ggplot(aes(x = cog_need_score, y = effect)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
x = 'Need for Cognition',
y = 'Extent Aligned with Prediction'
) +
theme_bw()
ggMarginal(p, type = 'histogram')
lag <- read.csv('../../../../participation_lag.csv')
avg_lag <- mean(lag$lag_hours)
lag %>%
ggplot(aes(x = lag_hours)) +
geom_histogram(color = 'black', bins = 20) +
geom_vline(xintercept = avg_lag, linetype = 'dashed')
head(lag)
lag <- read.csv('../../../../participation_lag.csv')
head(lag)
lag <- read.csv('../../../../participation_lag.csv')
colnames(lag)[2] <- 'lag_hours'
avg_lag <- mean(lag$lag_hours)
lag %>%
ggplot(aes(x = lag_hours)) +
geom_histogram(color = 'black', bins = 20) +
geom_vline(xintercept = avg_lag, linetype = 'dashed')
## join
## losing three Ps from my og data for some reason
d <- d %>%
inner_join(lag, by = c('sona_id' = 'survey_id'))
d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id')) %>%
ggplot(aes(x = lag_hours, y = effect)) +
geom_point() +
geom_smooth(method = 'lm')
## join
## losing three Ps from my og data for some reason
d <- d %>%
inner_join(lag, by = c('sona_id' = 'survey_id'))
cor_data <- d %>%
group_by(subject, direction) %>%
summarize(ssd = mean(ssd), sona_id = unique(sona_id)) %>%
spread(direction, ssd) %>%
mutate(effect = `Harder than Reference` - `Easier than Reference`) %>%
select(subject, sona_id, effect) %>%
inner_join(lag, by = c('sona_id' = 'survey_id'))
cor_data %>%
ggplot(aes(x = lag_hours, y = effect)) +
geom_point() +
geom_smooth(method = 'lm')
cor.test(cor_data$effect, cor_data$lag_hours)
lag %>%
ggplot(aes(x = lag_hours/24)) +
geom_histogram(color = 'black', bins = 20) +
geom_vline(xintercept = avg_lag, linetype = 'dashed')
avg_lag <- mean(lag$lag_hours)/24
lag %>%
ggplot(aes(x = lag_hours/24)) +
geom_histogram(color = 'black', bins = 20) +
geom_vline(xintercept = avg_lag, linetype = 'dashed')
q()
