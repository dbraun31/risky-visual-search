fit <- nls(model,
data = d,
start = c(k = 4, x0 = 4, L = 4, b = 4))
fit$m$getPars()
L <- fit$m$getPars()[3]
b <- fit$m$getPars()[4]
k <- fit$m$getPars()[1]
x0 <- fit$m$getPars()[2]
L <- fit$m$getPars()[3]
b <- fit$m$getPars()[4]
d$proba <- L / (1 + exp(-k * (d$x - x0))) + b
d %>%
ggplot(aes(x = x, y = y)) +
geom_point(alpha = .6) +
geom_line(aes(y = proba), color = 'blue', size = 1.5)
fit$m$getPars()
model <- y ~ L / (1 + exp(-k * (x - x0))) + b
fit <- nls(model,
data = d,
start = c(k = 4, x0 = 4, L = 4, b = 4))
k <- fit$m$getPars()[1]
x0 <- fit$m$getPars()[2]
L <- fit$m$getPars()[3]
b <- fit$m$getPars()[4]
d$proba <- L / (1 + exp(-k * (d$x - x0))) + b
d %>%
ggplot(aes(x = x, y = y)) +
geom_point(alpha = .6) +
geom_line(aes(y = proba), color = 'blue', size = 1.5)
fit$m$getPars()
library(tidyverse)
## make data
d <- data.frame(x = runif(1000, -10, 10))
b1 <- .5
b0 <- 2
sig <- function(x, b0, b1, L, b) {
y <- 1 / (1 + exp(-1 * (b0 + b1*x + runif(length(x), 0, .5))))
return(y)
}
d$y <- sig(d$x, b0, b1)
plot(d)
model <- y ~ 1 / (1 + exp(-1 * (b0 + b1 * x)))
fit <- nls(model,
data = d,
start = c(b0 = 4, b1 = 4))
b0 <- fit$m$getPars()[1]
b1 <- fit$m$getPars()[2]
d$proba <- 1 / (1 + exp(-1 * (b0 + b1 * x)))
d$proba <- 1 / (1 + exp(-1 * (b0 + b1 * d$x)))
d %>%
ggplot(aes(x = x, y = y)) +
geom_point(alpha = .6) +
geom_line(aes(y = proba), color = 'blue', size = 1.5)
d %>%
ggplot(aes(x = x, y = y)) +
geom_point(alpha = .6) +
geom_line(aes(y = proba), color = 'blue', size = 1.5)
d %>%
ggplot(aes(x = x, y = y)) +
geom_point(alpha = .6) +
geom_line(aes(y = proba), color = 'blue', size = 1.5)
d %>%
ggplot(aes(x = x, y = y)) +
geom_point(alpha = .6) +
geom_line(aes(y = proba), color = 'blue', size = 1.5)
d %>%
ggplot(aes(x = x, y = y)) +
geom_point(alpha = .6) +
geom_line(aes(y = proba), color = 'blue', size = 1.5)
dev.off()
d %>%
ggplot(aes(x = x, y = y)) +
geom_point(alpha = .6) +
geom_line(aes(y = proba), color = 'blue', size = 1.5)
fit$m$getPars()
1 / (1 + exp(fit$m$getPars()))
d[d$x==0,]
d[d$x<.01 & d$x>-.01,]
d[d$x<.05 & d$x>-.05,]
1 / (1 + exp(-fit$m$getPars()))
exp(fit$m$getPars())
{
y <- 1 / (1 + exp(-1 * (b0 + b1*x + runif(length(x), 0, 2))))
return(y)
}
sig <- function(x, b0, b1, L, b) {
y <- 1 / (1 + exp(-1 * (b0 + b1*x + runif(length(x), 0, 2))))
return(y)
}
d$y <- sig(d$x, b0, b1)
plot(d)
model <- y ~ 1 / (1 + exp(-1 * (b0 + b1 * x)))
fit <- nls(model,
data = d,
start = c(b0 = 4, b1 = 4))
b0 <- fit$m$getPars()[1]
b1 <- fit$m$getPars()[2]
d$proba <- 1 / (1 + exp(-1 * (b0 + b1 * d$x)))
d %>%
ggplot(aes(x = x, y = y)) +
geom_point(alpha = .6) +
geom_line(aes(y = proba), color = 'blue', size = 1.5)
lm
lm.fit
q()
library(tidyverse)
d <- read.csv('oVm3GwXg.csv')
head(d)
colnames(d) <- c('rt_window', 'transition', 'accuracy')
head(d)
nrow(d)
m1 <- glm(accuracy ~ rt_window + transition, data = d, family = binomial(link = 'logit'))
summary(m1)
bo <- m1$coefficients[1]
b1 <- m1$coefficients[2]
b2 <- m1$coefficients[3]
d$proba <- b0 + d$rt_window * b1 + d$transition * b2
b0 <- m1$coefficients[1]
d$proba <- b0 + d$rt_window * b1 + d$transition * b2
d %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(width = 0, height = .1) +
geom_line(y = proba, color = 'blue')
d %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(width = 0, height = .1) +
geom_line(aes(y = proba), color = 'blue')
d %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0, height = .1) +
geom_line(aes(y = proba, color = transition))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0, height = .1) +
geom_line(aes(y = proba, color = transition))
d$proba <- 1 / (1 + exp(b0 + d$rt_window * b1 + d$transition * b2))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0, height = .1) +
geom_line(aes(y = proba, color = transition))
d$proba <- predict(m1, newdata = d, type = 'response')
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0, height = .1) +
geom_line(aes(y = proba, color = transition))
d$proba <- 1 / (1 + -1 * exp(b0 + d$rt_window * b1 + d$transition * b2))
d$proba <- predict(m1, newdata = d, type = 'response')
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0, height = .1) +
geom_line(aes(y = proba, color = transition))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0, height = .1) +
geom_line(aes(y = proba, color = transition)) +
ylim(0,1)
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0, height = .01) +
geom_line(aes(y = proba, color = transition)) +
ylim(0,1)
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0, height = .01) +
geom_line(aes(y = proba, color = transition)) +
ylim(-.01,1)
seq(500, 1500, by = 50)
length(seq(500, 1500, by = 50))
length(seq(500, 1500, by = 75))
length(seq(0, 1, length.out = 14))
seq(0, 1, length.out = 14)
seq(0, 1, length.out = 14)[2] - seq(0, 1, length.out = 14)[1]
length(seq(0, 1, by = .07692308))
seq(300, 1300, by = 50)
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.01, height = .01) +
geom_line(aes(y = proba, color = transition)) +
ylim(-.01,1)
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.01, height = .01) +
geom_line(aes(y = proba, color = transition))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .01) +
geom_line(aes(y = proba, color = transition))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(y = proba, color = transition))
seq(1500, 3500, by = 200)
cor(seq(1500, 3500, by = 200), seq(0, 1, by = .07692308))
cor.test(seq(1500, 3500, by = 200), seq(0, 1, by = .07692308))
length(seq(1500, 3500, by = 200))
cor.test(seq(1500, 3500, by = 200), seq(0, 1, length.out=11))
1/11
seq(0,1, length.out=11)[2] - seq(0,1, length.out=11)[1]
seq(0,1, length.out=11)
1/10
seq(0,1, length.out=12)[2] - seq(0,1, length.out=12)[1] == 1/11
abs(end - start) / n - 1 = step
compute_step_size <- function(start, end, n) {}
compute_step_size <- function(start, end, n) {
return(abs(end-start) / (n-1))
}
compute_length <- function(start, end, step_size){
return((abs(end-start) / step) + 1)
}
t1 <- seq(50, 150, length.out = 100)
t1
t1[2]-t1[1] == compute_step_size(50,150,100)
compute_step_size(50,150,100)
t1 = seq(0, 1, length.out = 11)
t1[2]-t1[1] == compute_step_size(0,1,11)
step = compute_step_size(0,1,11)
length(seq(0, 1, by = step))
compute_length(0, 1, step)
length(seq(0, 555, by = 33))
compute_length(0, 555, 33)
seq(0,555, length.out = 17)[2] - seq(0,555, length.out = 17)[1]
compute_step_size(0,555,17)
compute_length
compute_length <- function(end, start, step) {
return(abs(end-start) / step + 1)
}
t1[2]-t1[1] == compute_step_size(50,150,100)
t1
t1 <- seq(50,150, by = 100)
t1[2]-t1[1] == compute_step_size(50,150,100)
t1
t1[2]-t1[1] == compute_length(50,150,100)
length(seq(0, 555, by = 33))
compute_length(0,555, 33)
compute_length
length_of_vector2 <- function(start, end, step) {
if(step == 0) return(1)
if(start > end && step > 0 || start < end && step < 0) return(0)
return(ceiling(abs((end - start)/step)))
}
length(seq(0,1, by = .1))
length_of_vector2(0, 1, .1)
getwd()
library(tidyverse)
d <- read.csv('lp9VhlZ4.csv.csv')
library(tidyverse)
d <- read.csv('lp9VhlZ4.csv')
colnames(d) <- c('rt_window', 'transition', 'accuracy')
m1 <- glm(accuracy ~ rt_window + transition, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
b2 <- m1$coefficients[3]
d$proba <- 1 / (1 + -1 * exp(b0 + d$rt_window * b1 + d$transition * b2))
d$proba <- predict(m1, newdata = d, type = 'response')
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(y = proba, color = transition))
d$proba <- 1 / (1 + -1 * exp(b0 + d$rt_window * b1))
d$proba <- predict(m1, newdata = d, type = 'response')
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(y = proba, color = transition))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(y = proba))
d$proba <- 1 / (1 + -1 * exp(b0 + d$rt_window * b1))
d$proba <- predict(m1, newdata = d, type = 'response')
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(y = proba))
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
b2 <- m1$coefficients[3]
d$proba <- 1 / (1 + -1 * exp(b0 + d$rt_window * b1))
d$proba <- predict(m1, newdata = d, type = 'response')
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(y = proba))
d <- d[d$rt_window<=1500,]
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
b2 <- m1$coefficients[3]
d$proba <- 1 / (1 + -1 * exp(b0 + d$rt_window * b1))
d$proba <- predict(m1, newdata = d, type = 'response')
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(y = proba))
newdata <- data.frame(rt_window = 0:3000)
newdata$proba <- 1 / (1 + -1 * exp(b0 + newdata$rt_window * b1))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba))
newdata$proba <- 1 / (1 + exp(-b0 + newdata$rt_window * b1))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba))
newdata$proba <- 1 / (1 + -exp(b0 + newdata$rt_window * b1))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba))
newdata$proba <- predict(m1, newdata = newdata, type = 'response')
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba))
b2 <- m1$coefficients[3]
m1$coefficients
summary(m1)
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
newdata <- data.frame(rt_window = 0:3000)
newdata$proba <- 1 / (1 + -exp(b0 + newdata$rt_window * b1))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba))
preds <- b0 + newdata$rt_window * b1
newdata$proba <- preds / (1 + exp(preds))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba))
d$proba <- 1 / (1 + -1 * exp(b0 + d$rt_window * b1))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba))
newdata$proba <- preds / (1 - exp(preds))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba))
newdata$proba <- 1 / (1 + exp(-preds))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba)) +
scale_x_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(data = newdata, aes(x = rt_window, y = proba)) +
scale_y_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1))
head(d)
logit <- function (x) {}
logit <- function (x) {
return(log(x / (1-x)))
}
logit(d$accuracy)
glm
d <- read.csv('my_data.csv')
colnames(d) <- c('rt_window', 'transition', 'accuracy')
head(d)
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
d$proba <- 1 / (1 + exp(-(b0 + d$rt_window * b1)))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba)) +
scale_y_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1))
library(tidyverse)
d <- read.csv('my_data.csv')
colnames(d) <- c('rt_window', 'transition', 'accuracy')
d <- d[d$rt_window<=1500,]
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
d$proba <- 1 / (1 + exp(-(b0 + d$rt_window * b1)))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba)) +
scale_y_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba)) +
scale_y_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1)) +
scale_x_continuous(labels = seq(200, 2500, by = 100), breaks = seq(200, 2500, by = 100))
library(tidyverse)
d <- read.csv('my_data.csv')
colnames(d) <- c('rt_window', 'transition', 'accuracy')
d <- d[d$rt_window<=1500,]
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
d$proba <- 1 / (1 + exp(-(b0 + d$rt_window * b1)))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba)) +
scale_y_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1)) +
scale_x_continuous(labels = seq(200, 2500, by = 100), breaks = seq(200, 2500, by = 100))
library(tidyverse)
d <- read.csv('my_data.csv')
colnames(d) <- c('rt_window', 'transition', 'pswitch', 'accuracy')
d <- d[d$rt_window<=1500,]
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
d$proba <- 1 / (1 + exp(-(b0 + d$rt_window * b1)))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba)) +
scale_y_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1)) +
scale_x_continuous(labels = seq(200, 2500, by = 100), breaks = seq(200, 2500, by = 100))
data
d
library(tidyverse)
d <- read.csv('my_data.csv')
colnames(d) <- c('rt_window', 'transition', 'pswitch', 'accuracy')
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
d$proba <- 1 / (1 + exp(-(b0 + d$rt_window * b1)))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba)) +
scale_y_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1)) +
scale_x_continuous(labels = seq(200, 2500, by = 100), breaks = seq(200, 2500, by = 100))
library(tidyverse)
d <- read.csv('my_data.csv')
colnames(d) <- c('rt_window', 'transition', 'pswitch', 'accuracy')
d <- d[d$rt_window<=2500,]
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
d$proba <- 1 / (1 + exp(-(b0 + d$rt_window * b1)))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba)) +
scale_y_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1)) +
scale_x_continuous(labels = seq(200, 2500, by = 100), breaks = seq(200, 2500, by = 100))
d
library(tidyverse)
d <- read.csv('my_data.csv')
colnames(d) <- c('rt_window', 'transition', 'pswitch', 'accuracy')
d <- d[d$rt_window<=2500,]
m1 <- glm(accuracy ~ rt_window, data = d, family = binomial(link = 'logit'))
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]
d$proba <- 1 / (1 + exp(-(b0 + d$rt_window * b1)))
d %>%
mutate(transition = factor(transition)) %>%
ggplot(aes(x = rt_window, y = accuracy)) +
geom_jitter(aes(color = transition), width = 0.1, height = .1) +
geom_line(aes(x = rt_window, y = proba)) +
scale_y_continuous(labels = seq(0,1, by = .1), breaks = seq(0, 1, by = .1)) +
scale_x_continuous(labels = seq(200, 2500, by = 100), breaks = seq(200, 2500, by = 100))
d
q()
